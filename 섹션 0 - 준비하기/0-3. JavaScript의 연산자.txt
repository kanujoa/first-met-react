1. 대입 연산자 (Assignment operator) : 변수에 값을 대입하기 위해 사용하는 연산자 (=)
   --> 항상 오른쪽에서 왼쪽으로 방향이 흘러감 (대입)

2. 산술 연산자(Arithmetic operators): +, -, *, /(나눗셈), %(나머지), **(지수)

3. 증가 연산자(++), 감소 연산자(--)
반환과 증감의 순서가 중요!
- postfix 방식 : a++ (연산자를 변수 뒤에)   --> 먼저 변수의 증감 전 값을 반환하고 이후에 값이 증감됨
(ex) let a = 1;
     let b = a++;     // 앞의 변수 a의 값에도 영향을 미침.
     console.log(a, b)     // 2, 1
- prefix 방식 : ++a (연산자를 변수 앞에)   --> 먼저 변수의 값을 증감하고 이후에 값을 반환시킴
(ex) let c = 1;
     let d = ++c;     // 앞의 변수 c의 값에도 영향을 미침.
     console.log(c, d)     // 2, 2

4. 관계 연산자(Relational operators) => 비교 연산자(Comparison operators): <, >, <=, >=
- 항상 왼쪽에 나온 코드를 기준으로 생각!

5. 동등 연산자(Equality operators) : 두 개의 값이 같은지 다른지 판단하게 해 줌. => ==, !=
JS에서는 자료형까지 같은지 엄격하게 비교가 가능한 '일치 연산자(Strict equality operators)' 제공!
--> a === b : a와 b가 값과 자료형까지 모두 같다.
--> a !== b : a와 b가 값과 자료형까지 모두 다르다.
(ex) 동등 연산자를 사용하면 1과 '1'은 같은 값이지만 일치 연산자를 사용하면 a와 b는 다른 값이다! 

6. 이진 논리 연산자(Binary logical operators) : (true, false) boolean 값을 비교할 때 사용하는 연산자로 결과도 항상 boolean값
- && : 모드 true일 경우에만 true 반환
- || : 하나라도 true일 경우 ture 반환

7. 조건부 연산자(Conditional operator) => 삼항 연산자(Ternary operator)
- 형식 => 조건식 ? ture일 경우 실행문 : false일 경우 실행문
(ex) let a = true;
     let b = false;
     console.log(a ? 1 : 2);     // 1
     console.log(b ? 1 : 2);     // 2 